@page "/queries";

@using Presentation.Services.Interfaces
@using IPUC.AA.Back.Models
@inject IUserService UserService
@inject NavigationManager NavManager

<PageTitle>Consulta Pagos</PageTitle>

<EditForm Model="@requestModel" OnValidSubmit="@ValidateUser">
    <div class="mb-3">
        <label for="inputDocumentNumber" class="form-label">Numero de documento</label>
        <input @bind-value="@requestModel.documentNumber" type="number" class="form-control" id="inputDocumentNumber">
        <div id="emailHelp" class="form-text">Numero de cedula de quien realiza el abono.</div>
    </div>
    <button type="submit" class="btn btn-primary">Consultar</button>
</EditForm>

@code
{
    public class DocumentNumberModel
    {
        public int documentNumber { get; set; }
    }

    DocumentNumberModel requestModel = new DocumentNumberModel();
    AddUserResponseModel model = new AddUserResponseModel();

    protected override async Task OnInitializedAsync()
    {
        if (requestModel.documentNumber != default(int))
        {
            await ValidateUser();
        }
    }

    private async Task ValidateUser()
    {
        if (requestModel.documentNumber != default(int))
        {
            model = await UserService.ValidateUser(requestModel.documentNumber);
            if (!model.IsCreated)
            {
                NavManager.NavigateTo($"/registeruser/{requestModel.documentNumber}");
            }
            else
            {
                NavManager.NavigateTo($"/registerpayment/{requestModel.documentNumber}");
            }
        }
    }
}